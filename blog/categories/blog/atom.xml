<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[catogories：Blog | Steven's Blog]]></title>
  <link href="http://isunix.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2024-09-05T21:40:43+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[高等数理统计学前言摘录]]></title>
    <link href="http://isunix.github.io/blog/2020/02/16/gao-deng-shu-li-tong-ji-xue-qian-yan-zhai-lu/"/>
    <updated>2020-02-16T10:41:40+08:00</updated>
    <id>http://isunix.github.io/blog/2020/02/16/gao-deng-shu-li-tong-ji-xue-qian-yan-zhai-lu</id>
    <content type="html"><![CDATA[<p>陈希孺在他的«高等数理统计学»一书的前言中, 关于学习方法的建议，真的让人十分认同。 我们自己或者观察别人就会发现，很多时候对一个概念的理解很肤浅，又或者以为对理论的内容已经知道了，但是要做题或者真的上手的时候，有会不知从何下手。 现在将陈希孺的建议摘抄在下面， 以供自勉。</p>

<p>书中习题及提示占了近半的篇幅，从写作时间言，则占了四分之三以上. 总计得题五百，若计小题，则不止千数. 其中除少量选摘自有关著作外，大半属作者自创. 有时一题之设，累日始成，可以说倾注了不少心力. 这样做完全是因为，多做习题，尤其是多做难题，对掌握并熟练数理统计学基本的论证方法和技巧，有着不可替代的重要性. 如果通过一门基础课的学习，只是记住了若干概念，背了几个定理，而未能在这方面有所长进，那就真是”入宝山而空返”了. 技巧的熟练固非一日之功，但取法乎上，仅得乎中，必须在开始学基础课时就设定一个高目标. 日后进入研究工作，克服难点的能力如何，相当一部分就取决于在这上面修为的深浅了. 同时，经验表明，在打基础的阶段因忽视习题而导致素质上的缺陷，在日后不易弥补，或事倍功半.</p>

<p>笔者在学生时代及其后的几年中，对做习题未给予足够重视. 当时误认为做题费时间，不增长新知识，不如多读些书，占得实地. 以后试做研究工作，就日渐感到其不良后果，表现在碰到问题办法少，容易钻死胡同，克服难点的能力弱，以致对自己缺乏信心. 对许多方法，都似雾里看花，似曾识面，而不能切实掌握和灵活运用. 有如十八般兵器，样样都见过，但拿到手里，就使不动或很笨拙. 欲以此克敌制胜，自难有成. 以后稍明白了这一点，做了些亡羊之补，终究晚了一些，所谓”困而学之，又其次也”. “熟能生巧”，前人的经验不诬. 而要达到”熟”，舍大量做题，无他捷径可循. 几十年来，审了大量的杂志稿件，每见某些工作，由于未经深思，为一个并不难克服之点加上了若干不必需的繁复条件，从而使整个工作流于肤浅. 这根子，大略也在于早先在习题上下的工夫不够，以致难以产生别出心裁的想法.</p>

<p>以本书的习题量，要求学员在课程时间范围内做完，恐不现实. 但作者本意并非把这一组题全作为课内习题，而是把它作为”打基础”这个工作的一环，一两年、两三年完成都可以，有空就做一点. 根据题的难易，将其分为三类：加”*“号的难度较大，加””号的相对容易，教师可考虑作为课外作业;不加任何记号的，其难度介乎二者之间. 对自学者、已经研究生毕业的青年教师和研究者，可利用这组题测试一下自己解题的能力如何. 可能会有一种意见，认为这组题过于偏难. 作为课程作业，这的确如此. 但笔者觉得，从”打基础”，锻炼技巧和提高能力诸目标看，非做难题不行，这道理正如训练运动员要加大运动量，做高难动作，不然，在训练的过程中舒服了，就别指望出好成绩.</p>

<p>各题都有详细提示，大多数较难的题都给出了完整解答. 这是因为，鉴于这些题的难度，需要有一个解答文本在，以作为依据. 对读者而言，笔者切望这部分是备而不用、备而少用. 如碰到一个题一时做不出来，宁肯暂时搁一搁，也不要轻易翻看解答. 譬如登山，经过艰苦努力上了峰顶，自有其乐趣和成就感. 反之，如在未尽全力之前就任人抬上去，则不惟无益，实足以挫折信心.</p>

<p>以上就习题一事唠叨了半天，读者也许烦了，就此打住. 千言万语，归结到一点：希望大家多做题，做难题. “千里之行，始于足下”，就从今日开始吧!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[对(大)数据分析工作的一些思考]]></title>
    <link href="http://isunix.github.io/blog/2019/07/20/dui-da-shu-ju-fen-xi-fen-xi-gong-zuo-de-%5B%3F%5D-xie-si-kao/"/>
    <updated>2019-07-20T08:50:36+08:00</updated>
    <id>http://isunix.github.io/blog/2019/07/20/dui-da-shu-ju-fen-xi-fen-xi-gong-zuo-de-[?]-xie-si-kao</id>
    <content type="html"><![CDATA[<p>如果把之前在Sonata Services做anti spam的工作也算是数据分析的话(确实跟数据分析沾边, 当时招聘的时候，就说懂机器学习是个加分项。 其实我们当时所做的工作，可以用”专家系统”来概括: 通过我们的知识和经验，去写规则和脚本去anti spam), 再加上在华米科技的这3年多做大数据分析的经历，也算是一个在数据分析领域，浸淫了快7年之久的人了， 如果再加上大学四年的”信息与计算科学”这个专业的学习经历的话(其实是3年，因为大一上半年是在农学类专业，大一下学期转到信息与计算科学)，那就是跟数据打交道了快10年的人了。往多了说10年，往少了说3年多， 也是该写点总结了。</p>

<p>BTW, 最近在看«谁说菜鸟不会数据分析»这本书， 发现自己的很多思考，跟书中提炼的内容，竟然不谋而合， 看来这本书还是不错的，哈哈哈。</p>

<p>从数据分析的技巧和方式上来看的话，可以分为:
1. 描述性数据分析
2. 探索性数据分析
3. 验证下数据分析</p>

<p>从数分析在日常工作中起到的作用来看的话，可以分为:
1. 现状分析
2. 原因分析
3. 预测分析</p>

<p>在«谁说菜鸟不会数据分析»这本书中，作者还总结了数据分析的6步曲:
1. 明确分析目的和思路
2. 数据收集
3. 数据处理
4. 数据分析
5. 数据展现
6. 报告撰写</p>

<p>其实，只要是在企业里做过数据分析的人， 这几步应该都是做过的，或许在报告的撰写这块， 不是每次都需要,尤其是做临时业务分析，并非每次都要写结论报告。</p>

<p>针对上面的6步曲，以我丰富的”描述性数据分析”的经验来看的话, 1-5都不难，只要受到专业的数学或者统计方面的训练， 加上一定的数据分析的专业工具和知识的培训，就可以上手了(如果一个人，连基本的统计概念都不清楚，你会对他做出的数据分析结果有信心么?)， 但是第6点的话， 就比较复杂了， 可能跟我这边”报告”撰写的少有关系，毕竟我们很多都是临时业务分析，不需要出报告， 而且报告的撰写，要有文字功底，要有优秀的思维能力， 要有不错的排版技术，要对业务足够的了解， 要对商业有一定的了解。</p>

<p>接下来说说数据分析的误区(参考自«谁说菜鸟不会数据分析»):
1. 分析目的不明确，为分析而分析
2. 缺乏业务知识，分析结果偏离实际
3. 一味追求使用高级方法，热衷研究模型</p>

<p>除了上面的3点，从我的经历中，我还要加上下面几点
1. 收集数据的时候，盲目相信数据的提供者； 比如有同事在找云端问数据在哪里的时候，云端说啥，他就认了，也不仔细思考，为啥用这个表，不用另外一个表？ 两个表有啥区别？ 
2. 分析出了数据，就完事了，也不去跟历史相似的数据，交叉比对，也不去想想我这个分析出来的额结果，有啥用？ 解决了数据需求者的问题了么？</p>

<p>接下来谈谈数据分析师的职业要求, 作者总结了以下几点
1. 懂业务
2. 懂管理
3. 懂分析
4. 懂工具
5. 懂设计</p>

<p>要做好一个数据分析师，难不难？ 很难。 很多人在 “懂分析” 和 “懂工具” 这块，就做的不好了， 而其实”懂分析” 和 “懂工具” 其实应该是做为一个数据分析师的硬性和基本的要求。做过几年数据分析的人，应该都能理解 “懂业务”, “懂管理” 和 “懂设计” 对于一个数据分析师来说，也是非常重要的。 “懂分析” 和 “懂工具” 决定了你能不能成为一个分析师，而是不是”懂业务”, “懂管理” 和 “懂设计”， 则决定了，你是不是一个好的分析师。 遗憾的是，我自己在后三点上，虽然有意培养自己在这块的能力和意识，但是并非优秀。 </p>

<p>作者也总结了数据分析师的基本素质，列在这里:
1. 态度严谨负责
2. 好奇心强烈
3. 逻辑思维清晰
4. 擅长模仿学习
5. 勇于创新</p>

<p>除了这5点，我想加上我自己的理解，毕竟数据分析师是要在公司或者各种机构里工作的，是要跟人合作的, 应该具备如下的素质:
1. 要有很好的workflow优化意识，很好的自我管理
2. 要有不错的编码能力和规范, 代码管理工具使用能力
3. 扎实的数理知识</p>

<p>看起来很像招聘贴子中的条款是吧？ 是的，但是这个就是现实， 数据分析师要到真实的环境中去，要成为一个合格的team player， 上面说的三点，最好是都具备。要不然，就落入下乘了。</p>

<p>Play with data and have fun!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最近的工作的一些感想]]></title>
    <link href="http://isunix.github.io/blog/2019/07/04/zui-jin-de-gong-zuo-de-%5B%3F%5D-xie-gan-xiang/"/>
    <updated>2019-07-04T12:04:30+08:00</updated>
    <id>http://isunix.github.io/blog/2019/07/04/zui-jin-de-gong-zuo-de-[?]-xie-gan-xiang</id>
    <content type="html"><![CDATA[<h3 id="section">2019年年中开始，后面的工作内容应该有所调整。</h3>

<p>自从16年6月底，从上海回到合肥，加入到华米科技， 到现在整整3年了。 </p>

<p>从16年年中，到17年年初，基本一个人在做数据分析和报表。17年初到18年中， 带了一个新加入的同事A一起做数据分析和ETL等相关工作。 18年中，A去做上游的导数的事情，分析由我和新加入的B和C, 两个妹子，一起来完成，同时，自己也从大数据工程师，升级成了高级大数据工程师。 </p>

<p>到了19年年中，撇去一些不开心的因素(导火索吧), 为什么想从大数据分析，转到算法团队(人工智能实验室团队)去做点事情呢？ 我想主要还是想去了解数据探索的一个实用的套路吧。毕竟，描述性的统计分析，这个我已经做了三年了。 而关于数据的更地道的挖掘和分析，特征选取，建模， 模型评估这些，都是自己的薄弱点。也是我所认为的一个合格的<code>data scientist</code>必须掌握的。更何况，自己在算法和机器学习这块，并非是没有基础。人生那么长，总不能一辈子做基础的描述性的统计分析/业务分析还有做报表吧。</p>

<p>下面列出一些以前学习过的课程和材料吧, 算是对过往准备工作的一个总结。 </p>

<ul>
  <li>
    <p><code>台大林轩田的&lt;机器学习基石&gt;， &lt;机器学习技巧&gt; 和 对应的英文教材 &lt;Learning From Data&gt;</code></p>
  </li>
  <li>
    <p><code>吴恩达的&lt;机器学习&gt; 和 &lt;深度学习&gt;课程， 并且完成了coursera上的深度学习的几门课程(课后作业有点水，因为很多都可以通过上下文得到， 但是不得不承认，是好的课后作业)</code></p>
  </li>
  <li>
    <p><code>北京交通大学的桑基韬等人在网易云课堂上开的&lt;深度学习&gt;课程</code></p>
  </li>
  <li>
    <p><code>周志华的西瓜书&lt;机器学习&gt;</code></p>
  </li>
  <li>
    <p><code>李航的&lt;统计学习方法&gt;</code></p>
  </li>
  <li>
    <p><code>&lt;The Elements of Statistical Learning&gt; 看了一点点</code></p>
  </li>
  <li>
    <p><code>概率统计和线性代数的相关知识平时都有所复习</code></p>
  </li>
  <li>
    <p><code>scikit-learn, pandas 的了解和使用</code></p>
  </li>
  <li>
    <p><code>用逻辑回归和时间序列分析，做过点探索分析; 时间序列分析结果，还在团队内部进行过分享</code></p>
  </li>
  <li>
    <p><code>用深度学习的cnn方法，做过一个图片的分类程序(判断照片好看是不那么好看)</code></p>
  </li>
  <li>
    <p><code>使用过算法包跑算法，并且验证算法检测结果，计算FN, FP, TN, TP</code>.</p>
  </li>
  <li>
    <p><code>在来华米科技之前, 做了三年多的防垃圾邮件工作， 文本处理相关的原理和技术，非常熟悉了</code></p>
  </li>
</ul>

<p>准备不少，现在缺乏啥呢？ </p>

<ul>
  <li>
    <p><code>缺少对机器学习和深度学习算法的深刻理解，手写算法的能力</code></p>
  </li>
  <li>
    <p><code>缺少数据挖掘和更深层次的统计分析的流程认知</code></p>
  </li>
  <li>
    <p><code>缺乏项目经验</code></p>
  </li>
</ul>

<h2 id="section-1">希望一切都好，毕竟我才30岁。</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rake New_post错误解决]]></title>
    <link href="http://isunix.github.io/blog/2015/06/01/alternative-way-to-bypass-problems-met-when-rake-new-post/"/>
    <updated>2015-06-01T11:06:22+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/01/alternative-way-to-bypass-problems-met-when-rake-new-post</id>
    <content type="html"><![CDATA[<p>I met errors while I am issuing the command “rake new_post” add generate a new post. Here is an alternative way to generate new post:</p>

<p><code>ruby
bundle exec rake "new_post[alternative way to bypass problems met when rake new_post]"
</code></p>

<p>and then we can use the “Mou” app to open the page:</p>

<p><code>ruby
open -a Mou source/_posts/2015-06-01-alternative-way-to-bypass-problems-met-when-rake-new-post.markdown
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Octopress中插入图片]]></title>
    <link href="http://isunix.github.io/blog/2014/06/15/how-to-insert-pictures-in-octopress/"/>
    <updated>2014-06-15T23:14:54+08:00</updated>
    <id>http://isunix.github.io/blog/2014/06/15/how-to-insert-pictures-in-octopress</id>
    <content type="html"><![CDATA[<p>Of course you can google about it, but I just keep it down so that every time I do it, I do not need to google again. It is pretty easy. </p>

<p><code>html
{\% img [class names] /path/to/image [width] [height] [title text [alt text]] \%}
</code></p>

<p>Of course you need to remove the “\” in the above line. I just it there so it will be interpreted as inserting a pic here. Sorry about this.</p>

<p>Just add your pics in the above format. Note here I add a subdir in the source/images/ dir.  </p>

<p>That is it. </p>
]]></content>
  </entry>
  
</feed>
