<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[catogories：PHP | Steven's Blog]]></title>
  <link href="http://isunix.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2024-09-05T21:40:43+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP里include和require的使用]]></title>
    <link href="http://isunix.github.io/blog/2014/11/18/include-and-require-in-php/"/>
    <updated>2014-11-18T13:42:05+08:00</updated>
    <id>http://isunix.github.io/blog/2014/11/18/include-and-require-in-php</id>
    <content type="html"><![CDATA[<p>For a person who has experience in programming PHP, he should have heard the concept of “include”, “include_once”, “require”, “require_once”. We will give a little deailed info here.</p>

<p>1.include_once</p>

<p>```
The include_once statement includes and evaluates the specified file during the execution of the script. This is a behavior similar to the include statement, with the only difference being that if the code from a file has already been included, it will not be included again. As the name suggests, it will be included just once.</p>

<p>include_once may be used in cases where the same file might be included and evaluated more than once during a particular execution of a script, so in this case it may help avoid problems such as function redefinitions, variable value reassignments, etc.
```  </p>

<p>2.require and include</p>

<p>```
the differences between require and include are:  </p>

<p>当要包含的文件不存在时,include产生一个警告(Warning)该语句后面的程序会继续执行；而require则导致一个致命错误（Fatal error),程序就此终止。</p>

<p>include_once和require_once
应该用于在脚本执行期间同一个文件有可能被包含超过一次的情况下, 想确保它只被包含一次以避免函数重定义, 变量重新赋值等问题.</p>

<p>*.incluce在用到时加载，这个函式一般是放在流程控制的处理区段中
*.require在一开始就加载，这个函式通常放在PHP程式的最前面
*._once后缀表示已加载的不加载
```  </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP中添加jquery文件的几种方法]]></title>
    <link href="http://isunix.github.io/blog/2014/08/01/ways-to-include-a-jquery-file/"/>
    <updated>2014-08-01T15:03:11+08:00</updated>
    <id>http://isunix.github.io/blog/2014/08/01/ways-to-include-a-jquery-file</id>
    <content type="html"><![CDATA[<p>The following are several addtional ways to include a jquery file in your php script.  </p>

<p><code>js
&lt;script type="text/javascript" src="js/jquery-1.11.1.min.js"&gt;&lt;/script&gt;
</code><br />
or  </p>

<p><code>js
&lt;script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"&gt;
&lt;/script&gt;
</code> <br />
or  </p>

<p>```js
<script type="text/javascript" src="http://www.google.com/jsapi"> </script></p>

<script type="text/javascript">
	google.load("jquery", "1.7.1");
</script>

<p>```</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将一个每行一个item的多行文本转变成每行固定数目的item的文本(PHP)]]></title>
    <link href="http://isunix.github.io/blog/2014/07/17/split-mids-to-several-lines-with-fixed-number-per-line/"/>
    <updated>2014-07-17T10:26:09+08:00</updated>
    <id>http://isunix.github.io/blog/2014/07/17/split-mids-to-several-lines-with-fixed-number-per-line</id>
    <content type="html"><![CDATA[<p>We have many mids with one mid every line, now we want to print all those mids out with a fixed number of mids per line. I want to realize this function in Perl first without success, so I am using PHP. </p>

<p>```php </p>

<?php

$scriptname = $argv[0];
$txt_file = $argv[1];
$dir = ".";

$contents = file_get_contents("$dir/$txt_file", FILE_USE_INCLUDE_PATH);
$contents = trim($contents);

$mid_splited = preg_split("/\n/", $contents);

$count_mids = count($mid_splited);

for ($i = 0; $i < $count_mids; $i++){
  print "$mid_splited[$i] ";
  if ($i % 7 == 0){
    print "\n";
  }
}


?>

<p>```　</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Php-cgi Not Found 错误处理]]></title>
    <link href="http://isunix.github.io/blog/2014/06/07/php-cgi-not-found-error/"/>
    <updated>2014-06-07T14:56:33+08:00</updated>
    <id>http://isunix.github.io/blog/2014/06/07/php-cgi-not-found-error</id>
    <content type="html"><![CDATA[<p>Today while I was running a php script from the PHPStrom by a browser, I got the following error telling me that “php-cgi not found.”. I have no other way but to install a new version of php, my original version is 5.4.24, I then installed a 5.5 version.  </p>

<p><code>bash
curl -s http://php-osx.liip.ch/install.sh | bash -s 5.5
</code></p>

<p>and in my phpstorm, I use the path, “usr/local/php5/bin” as the interpreter’s path. It works now.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在mac上搭建PHP和Apache服务]]></title>
    <link href="http://isunix.github.io/blog/2014/06/07/set-up-php-and-apache-on-mac-os/"/>
    <updated>2014-06-07T14:25:00+08:00</updated>
    <id>http://isunix.github.io/blog/2014/06/07/set-up-php-and-apache-on-mac-os</id>
    <content type="html"><![CDATA[<p>I have set up Apache and PHP on my computer many times, every time I googled or Baidued about it, it is high time to keep a note about those steps.    </p>

<ol>
  <li>sudo mate /etc/apache2/httpd.conf</li>
  <li>uncomment “#LoadModule php5_module libexec/apache2/libphp5.so”</li>
  <li>save the file and quit. </li>
  <li>sudo cp /etc/php.ini.default /etc/php.ini</li>
  <li>sudo apachectl start </li>
  <li>ln -s /Library/WebServer/Document $HOME/www</li>
  <li>rename the file “index.html.en” or just delete the file if you do not want to be botthered.  </li>
</ol>

<p>That’s the steps all it takes to set up your apache and PHP on a MAC OS machine.</p>

]]></content>
  </entry>
  
</feed>
